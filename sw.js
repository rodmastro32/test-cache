try{self["workbox:core:7.2.0"]&&_()}catch{}const Z=(s,...e)=>{let t=s;return e.length>0&&(t+=` :: ${JSON.stringify(e)}`),t},ee=Z;class u extends Error{constructor(e,t){const a=ee(e,t);super(a),this.name=e,this.details=t}}const V=new Set;function te(s){V.add(s)}const f={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:typeof registration<"u"?registration.scope:""},U=s=>[f.prefix,s,f.suffix].filter(e=>e&&e.length>0).join("-"),se=s=>{for(const e of Object.keys(f))s(e)},x={updateDetails:s=>{se(e=>{typeof s[e]=="string"&&(f[e]=s[e])})},getGoogleAnalyticsName:s=>s||U(f.googleAnalytics),getPrecacheName:s=>s||U(f.precache),getPrefix:()=>f.prefix,getRuntimeName:s=>s||U(f.runtime),getSuffix:()=>f.suffix};function K(s,e){const t=new URL(s);for(const a of e)t.searchParams.delete(a);return t.href}async function ae(s,e,t,a){const n=K(e.url,t);if(e.url===n)return s.match(e,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await s.keys(e,i);for(const c of r){const o=K(c.url,t);if(n===o)return s.match(c,a)}}let y;function ne(){if(y===void 0){const s=new Response("");if("body"in s)try{new Response(s.body),y=!0}catch{y=!1}y=!1}return y}function $(s){s.then(()=>{})}class re{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}async function ie(){for(const s of V)await s()}const ce=s=>new URL(String(s),location.href).href.replace(new RegExp(`^${location.origin}`),"");function oe(s){return new Promise(e=>setTimeout(e,s))}function O(s,e){const t=e();return s.waitUntil(t),t}async function le(s,e){let t=null;if(s.url&&(t=new URL(s.url).origin),t!==self.location.origin)throw new u("cross-origin-copy-response",{origin:t});const a=s.clone(),i={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},r=ne()?a.body:await a.blob();return new Response(r,i)}function he(){self.addEventListener("activate",()=>self.clients.claim())}try{self["workbox:precaching:7.2.0"]&&_()}catch{}const ue="__WB_REVISION__";function de(s){if(!s)throw new u("add-to-cache-list-unexpected-type",{entry:s});if(typeof s=="string"){const i=new URL(s,location.href);return{cacheKey:i.href,url:i.href}}const{revision:e,url:t}=s;if(!t)throw new u("add-to-cache-list-unexpected-type",{entry:s});if(!e){const i=new URL(t,location.href);return{cacheKey:i.href,url:i.href}}const a=new URL(t,location.href),n=new URL(t,location.href);return a.searchParams.set(ue,e),{cacheKey:a.href,url:n.href}}class fe{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:a})=>{if(e.type==="install"&&t&&t.originalRequest&&t.originalRequest instanceof Request){const n=t.originalRequest.url;a?this.notUpdatedURLs.push(n):this.updatedURLs.push(n)}return a}}}class pe{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:t,params:a})=>{const n=(a==null?void 0:a.cacheKey)||this._precacheController.getCacheKeyForURL(t.url);return n?new Request(n,{headers:t.headers}):t},this._precacheController=e}}try{self["workbox:strategies:7.2.0"]&&_()}catch{}function S(s){return typeof s=="string"?new Request(s):s}class ge{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new re,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const a of this._plugins)this._pluginStateMap.set(a,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let a=S(e);if(a.mode==="navigate"&&t instanceof FetchEvent&&t.preloadResponse){const r=await t.preloadResponse;if(r)return r}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const r of this.iterateCallbacks("requestWillFetch"))a=await r({request:a.clone(),event:t})}catch(r){if(r instanceof Error)throw new u("plugin-error-request-will-fetch",{thrownErrorMessage:r.message})}const i=a.clone();try{let r;r=await fetch(a,a.mode==="navigate"?void 0:this._strategy.fetchOptions);for(const c of this.iterateCallbacks("fetchDidSucceed"))r=await c({event:t,request:i,response:r});return r}catch(r){throw n&&await this.runCallbacks("fetchDidFail",{error:r,event:t,originalRequest:n.clone(),request:i.clone()}),r}}async fetchAndCachePut(e){const t=await this.fetch(e),a=t.clone();return this.waitUntil(this.cachePut(e,a)),t}async cacheMatch(e){const t=S(e);let a;const{cacheName:n,matchOptions:i}=this._strategy,r=await this.getCacheKey(t,"read"),c=Object.assign(Object.assign({},i),{cacheName:n});a=await caches.match(r,c);for(const o of this.iterateCallbacks("cachedResponseWillBeUsed"))a=await o({cacheName:n,matchOptions:i,cachedResponse:a,request:r,event:this.event})||void 0;return a}async cachePut(e,t){const a=S(e);await oe(0);const n=await this.getCacheKey(a,"write");if(!t)throw new u("cache-put-with-no-response",{url:ce(n.url)});const i=await this._ensureResponseSafeToCache(t);if(!i)return!1;const{cacheName:r,matchOptions:c}=this._strategy,o=await self.caches.open(r),h=this.hasCallback("cacheDidUpdate"),w=h?await ae(o,n.clone(),["__WB_REVISION__"],c):null;try{await o.put(n,h?i.clone():i)}catch(d){if(d instanceof Error)throw d.name==="QuotaExceededError"&&await ie(),d}for(const d of this.iterateCallbacks("cacheDidUpdate"))await d({cacheName:r,oldResponse:w,newResponse:i.clone(),request:n,event:this.event});return!0}async getCacheKey(e,t){const a=`${e.url} | ${t}`;if(!this._cacheKeys[a]){let n=e;for(const i of this.iterateCallbacks("cacheKeyWillBeUsed"))n=S(await i({mode:t,request:n,event:this.event,params:this.params}));this._cacheKeys[a]=n}return this._cacheKeys[a]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const a of this.iterateCallbacks(e))await a(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if(typeof t[e]=="function"){const a=this._pluginStateMap.get(t);yield i=>{const r=Object.assign(Object.assign({},i),{state:a});return t[e](r)}}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,a=!1;for(const n of this.iterateCallbacks("cacheWillUpdate"))if(t=await n({request:this.request,response:t,event:this.event})||void 0,a=!0,!t)break;return a||t&&t.status!==200&&(t=void 0),t}}class I{constructor(e={}){this.cacheName=x.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,a=typeof e.request=="string"?new Request(e.request):e.request,n="params"in e?e.params:void 0,i=new ge(this,{event:t,request:a,params:n}),r=this._getResponse(i,a,t),c=this._awaitComplete(r,i,a,t);return[r,c]}async _getResponse(e,t,a){await e.runCallbacks("handlerWillStart",{event:a,request:t});let n;try{if(n=await this._handle(t,e),!n||n.type==="error")throw new u("no-response",{url:t.url})}catch(i){if(i instanceof Error){for(const r of e.iterateCallbacks("handlerDidError"))if(n=await r({error:i,event:a,request:t}),n)break}if(!n)throw i}for(const i of e.iterateCallbacks("handlerWillRespond"))n=await i({event:a,request:t,response:n});return n}async _awaitComplete(e,t,a,n){let i,r;try{i=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:n,request:a,response:i}),await t.doneWaiting()}catch(c){c instanceof Error&&(r=c)}if(await t.runCallbacks("handlerDidComplete",{event:n,request:a,response:i,error:r}),t.destroy(),r)throw r}}class g extends I{constructor(e={}){e.cacheName=x.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=e.fallbackToNetwork!==!1,this.plugins.push(g.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const a=await t.cacheMatch(e);return a||(t.event&&t.event.type==="install"?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let a;const n=t.params||{};if(this._fallbackToNetwork){const i=n.integrity,r=e.integrity,c=!r||r===i;a=await t.fetch(new Request(e,{integrity:e.mode!=="no-cors"?r||i:void 0})),i&&c&&e.mode!=="no-cors"&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,a.clone()))}else throw new u("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return a}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const a=await t.fetch(e);if(!await t.cachePut(e,a.clone()))throw new u("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[a,n]of this.plugins.entries())n!==g.copyRedirectedCacheableResponsesPlugin&&(n===g.defaultPrecacheCacheabilityPlugin&&(e=a),n.cacheWillUpdate&&t++);t===0?this.plugins.push(g.defaultPrecacheCacheabilityPlugin):t>1&&e!==null&&this.plugins.splice(e,1)}}g.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate({response:s}){return!s||s.status>=400?null:s}};g.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate({response:s}){return s.redirected?await le(s):s}};class me{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:a=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new g({cacheName:x.getPrecacheName(e),plugins:[...t,new pe({precacheController:this})],fallbackToNetwork:a}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const a of e){typeof a=="string"?t.push(a):a&&a.revision===void 0&&t.push(a.url);const{cacheKey:n,url:i}=de(a),r=typeof a!="string"&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(i)&&this._urlsToCacheKeys.get(i)!==n)throw new u("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(i),secondEntry:n});if(typeof a!="string"&&a.integrity){if(this._cacheKeysToIntegrities.has(n)&&this._cacheKeysToIntegrities.get(n)!==a.integrity)throw new u("add-to-cache-list-conflicting-integrities",{url:i});this._cacheKeysToIntegrities.set(n,a.integrity)}if(this._urlsToCacheKeys.set(i,n),this._urlsToCacheModes.set(i,r),t.length>0){const c=`Workbox is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(c)}}}install(e){return O(e,async()=>{const t=new fe;this.strategy.plugins.push(t);for(const[i,r]of this._urlsToCacheKeys){const c=this._cacheKeysToIntegrities.get(r),o=this._urlsToCacheModes.get(i),h=new Request(i,{integrity:c,cache:o,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:r},request:h,event:e}))}const{updatedURLs:a,notUpdatedURLs:n}=t;return{updatedURLs:a,notUpdatedURLs:n}})}activate(e){return O(e,async()=>{const t=await self.caches.open(this.strategy.cacheName),a=await t.keys(),n=new Set(this._urlsToCacheKeys.values()),i=[];for(const r of a)n.has(r.url)||(await t.delete(r),i.push(r.url));return{deletedURLs:i}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,a=this.getCacheKeyForURL(t);if(a)return(await self.caches.open(this.strategy.cacheName)).match(a)}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new u("non-precached-url",{url:e});return a=>(a.request=new Request(e),a.params=Object.assign({cacheKey:t},a.params),this.strategy.handle(a))}}let D;const G=()=>(D||(D=new me),D);try{self["workbox:routing:7.2.0"]&&_()}catch{}const z="GET",v=s=>s&&typeof s=="object"?s:{handle:s};class C{constructor(e,t,a=z){this.handler=v(t),this.match=e,this.method=a}setCatchHandler(e){this.catchHandler=v(e)}}class we extends C{constructor(e,t,a){const n=({url:i})=>{const r=e.exec(i.href);if(r&&!(i.origin!==location.origin&&r.index!==0))return r.slice(1)};super(n,t,a)}}class ye{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,a=this.handleRequest({request:t,event:e});a&&e.respondWith(a)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&e.data.type==="CACHE_URLS"){const{payload:t}=e.data,a=Promise.all(t.urlsToCache.map(n=>{typeof n=="string"&&(n=[n]);const i=new Request(...n);return this.handleRequest({request:i,event:e})}));e.waitUntil(a),e.ports&&e.ports[0]&&a.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const a=new URL(e.url,location.href);if(!a.protocol.startsWith("http"))return;const n=a.origin===location.origin,{params:i,route:r}=this.findMatchingRoute({event:t,request:e,sameOrigin:n,url:a});let c=r&&r.handler;const o=e.method;if(!c&&this._defaultHandlerMap.has(o)&&(c=this._defaultHandlerMap.get(o)),!c)return;let h;try{h=c.handle({url:a,request:e,event:t,params:i})}catch(d){h=Promise.reject(d)}const w=r&&r.catchHandler;return h instanceof Promise&&(this._catchHandler||w)&&(h=h.catch(async d=>{if(w)try{return await w.handle({url:a,request:e,event:t,params:i})}catch(M){M instanceof Error&&(d=M)}if(this._catchHandler)return this._catchHandler.handle({url:a,request:e,event:t});throw d})),h}findMatchingRoute({url:e,sameOrigin:t,request:a,event:n}){const i=this._routes.get(a.method)||[];for(const r of i){let c;const o=r.match({url:e,sameOrigin:t,request:a,event:n});if(o)return c=o,(Array.isArray(c)&&c.length===0||o.constructor===Object&&Object.keys(o).length===0||typeof o=="boolean")&&(c=void 0),{route:r,params:c}}return{}}setDefaultHandler(e,t=z){this._defaultHandlerMap.set(t,v(e))}setCatchHandler(e){this._catchHandler=v(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new u("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new u("unregister-route-route-not-registered")}}let R;const _e=()=>(R||(R=new ye,R.addFetchListener(),R.addCacheListener()),R);function E(s,e,t){let a;if(typeof s=="string"){const i=new URL(s,location.href),r=({url:c})=>c.href===i.href;a=new C(r,e,t)}else if(s instanceof RegExp)a=new we(s,e,t);else if(typeof s=="function")a=new C(s,e,t);else if(s instanceof C)a=s;else throw new u("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return _e().registerRoute(a),a}function Re(s,e=[]){for(const t of[...s.searchParams.keys()])e.some(a=>a.test(t))&&s.searchParams.delete(t);return s}function*be(s,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:t="index.html",cleanURLs:a=!0,urlManipulation:n}={}){const i=new URL(s,location.href);i.hash="",yield i.href;const r=Re(i,e);if(yield r.href,t&&r.pathname.endsWith("/")){const c=new URL(r.href);c.pathname+=t,yield c.href}if(a){const c=new URL(r.href);c.pathname+=".html",yield c.href}if(n){const c=n({url:i});for(const o of c)yield o.href}}class Ce extends C{constructor(e,t){const a=({request:n})=>{const i=e.getURLsToCacheKeys();for(const r of be(n.url,t)){const c=i.get(r);if(c){const o=e.getIntegrityForCacheKey(c);return{cacheKey:c,integrity:o}}}};super(a,e.strategy)}}function ke(s){const e=G(),t=new Ce(e,s);E(t)}const xe="-precache-",Ee=async(s,e=xe)=>{const a=(await self.caches.keys()).filter(n=>n.includes(e)&&n.includes(self.registration.scope)&&n!==s);return await Promise.all(a.map(n=>self.caches.delete(n))),a};function Se(){self.addEventListener("activate",s=>{const e=x.getPrecacheName();s.waitUntil(Ee(e).then(t=>{}))})}function ve(s){G().precache(s)}function Ue(s,e){ve(s),ke(e)}class De extends I{async _handle(e,t){let a=await t.cacheMatch(e),n;if(!a)try{a=await t.fetchAndCachePut(e)}catch(i){i instanceof Error&&(n=i)}if(!a)throw new u("no-response",{url:e.url,error:n});return a}}const Pe={cacheWillUpdate:async({response:s})=>s.status===200||s.status===0?s:null};class Le extends I{constructor(e={}){super(e),this.plugins.some(t=>"cacheWillUpdate"in t)||this.plugins.unshift(Pe)}async _handle(e,t){const a=t.fetchAndCachePut(e).catch(()=>{});t.waitUntil(a);let n=await t.cacheMatch(e),i;if(!n)try{n=await a}catch(r){r instanceof Error&&(i=r)}if(!n)throw new u("no-response",{url:e.url,error:i});return n}}try{self["workbox:cacheable-response:7.2.0"]&&_()}catch{}class We{constructor(e={}){this._statuses=e.statuses,this._headers=e.headers}isResponseCacheable(e){let t=!0;return this._statuses&&(t=this._statuses.includes(e.status)),this._headers&&t&&(t=Object.keys(this._headers).some(a=>e.headers.get(a)===this._headers[a])),t}}class Q{constructor(e){this.cacheWillUpdate=async({response:t})=>this._cacheableResponse.isResponseCacheable(t)?t:null,this._cacheableResponse=new We(e)}}const Te=(s,e)=>e.some(t=>s instanceof t);let B,F;function Ae(){return B||(B=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function Ie(){return F||(F=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const J=new WeakMap,T=new WeakMap,X=new WeakMap,P=new WeakMap,N=new WeakMap;function Ne(s){const e=new Promise((t,a)=>{const n=()=>{s.removeEventListener("success",i),s.removeEventListener("error",r)},i=()=>{t(p(s.result)),n()},r=()=>{a(s.error),n()};s.addEventListener("success",i),s.addEventListener("error",r)});return e.then(t=>{t instanceof IDBCursor&&J.set(t,s)}).catch(()=>{}),N.set(e,s),e}function Me(s){if(T.has(s))return;const e=new Promise((t,a)=>{const n=()=>{s.removeEventListener("complete",i),s.removeEventListener("error",r),s.removeEventListener("abort",r)},i=()=>{t(),n()},r=()=>{a(s.error||new DOMException("AbortError","AbortError")),n()};s.addEventListener("complete",i),s.addEventListener("error",r),s.addEventListener("abort",r)});T.set(s,e)}let A={get(s,e,t){if(s instanceof IDBTransaction){if(e==="done")return T.get(s);if(e==="objectStoreNames")return s.objectStoreNames||X.get(s);if(e==="store")return t.objectStoreNames[1]?void 0:t.objectStore(t.objectStoreNames[0])}return p(s[e])},set(s,e,t){return s[e]=t,!0},has(s,e){return s instanceof IDBTransaction&&(e==="done"||e==="store")?!0:e in s}};function Ke(s){A=s(A)}function Oe(s){return s===IDBDatabase.prototype.transaction&&!("objectStoreNames"in IDBTransaction.prototype)?function(e,...t){const a=s.call(L(this),e,...t);return X.set(a,e.sort?e.sort():[e]),p(a)}:Ie().includes(s)?function(...e){return s.apply(L(this),e),p(J.get(this))}:function(...e){return p(s.apply(L(this),e))}}function Be(s){return typeof s=="function"?Oe(s):(s instanceof IDBTransaction&&Me(s),Te(s,Ae())?new Proxy(s,A):s)}function p(s){if(s instanceof IDBRequest)return Ne(s);if(P.has(s))return P.get(s);const e=Be(s);return e!==s&&(P.set(s,e),N.set(e,s)),e}const L=s=>N.get(s);function Fe(s,e,{blocked:t,upgrade:a,blocking:n,terminated:i}={}){const r=indexedDB.open(s,e),c=p(r);return a&&r.addEventListener("upgradeneeded",o=>{a(p(r.result),o.oldVersion,o.newVersion,p(r.transaction),o)}),t&&r.addEventListener("blocked",o=>t(o.oldVersion,o.newVersion,o)),c.then(o=>{i&&o.addEventListener("close",()=>i()),n&&o.addEventListener("versionchange",h=>n(h.oldVersion,h.newVersion,h))}).catch(()=>{}),c}function je(s,{blocked:e}={}){const t=indexedDB.deleteDatabase(s);return e&&t.addEventListener("blocked",a=>e(a.oldVersion,a)),p(t).then(()=>{})}const qe=["get","getKey","getAll","getAllKeys","count"],He=["put","add","delete","clear"],W=new Map;function j(s,e){if(!(s instanceof IDBDatabase&&!(e in s)&&typeof e=="string"))return;if(W.get(e))return W.get(e);const t=e.replace(/FromIndex$/,""),a=e!==t,n=He.includes(t);if(!(t in(a?IDBIndex:IDBObjectStore).prototype)||!(n||qe.includes(t)))return;const i=async function(r,...c){const o=this.transaction(r,n?"readwrite":"readonly");let h=o.store;return a&&(h=h.index(c.shift())),(await Promise.all([h[t](...c),n&&o.done]))[0]};return W.set(e,i),i}Ke(s=>({...s,get:(e,t,a)=>j(e,t)||s.get(e,t,a),has:(e,t)=>!!j(e,t)||s.has(e,t)}));try{self["workbox:expiration:7.2.0"]&&_()}catch{}const Ve="workbox-expiration",b="cache-entries",q=s=>{const e=new URL(s,location.href);return e.hash="",e.href};class $e{constructor(e){this._db=null,this._cacheName=e}_upgradeDb(e){const t=e.createObjectStore(b,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&je(this._cacheName)}async setTimestamp(e,t){e=q(e);const a={url:e,timestamp:t,cacheName:this._cacheName,id:this._getId(e)},i=(await this.getDb()).transaction(b,"readwrite",{durability:"relaxed"});await i.store.put(a),await i.done}async getTimestamp(e){const a=await(await this.getDb()).get(b,this._getId(e));return a==null?void 0:a.timestamp}async expireEntries(e,t){const a=await this.getDb();let n=await a.transaction(b).store.index("timestamp").openCursor(null,"prev");const i=[];let r=0;for(;n;){const o=n.value;o.cacheName===this._cacheName&&(e&&o.timestamp<e||t&&r>=t?i.push(n.value):r++),n=await n.continue()}const c=[];for(const o of i)await a.delete(b,o.id),c.push(o.url);return c}_getId(e){return this._cacheName+"|"+q(e)}async getDb(){return this._db||(this._db=await Fe(Ve,1,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}}class Ge{constructor(e,t={}){this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new $e(e)}async expireEntries(){if(this._isRunning){this._rerunRequested=!0;return}this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-this._maxAgeSeconds*1e3:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),a=await self.caches.open(this._cacheName);for(const n of t)await a.delete(n,this._matchOptions);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,$(this.expireEntries()))}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){const t=await this._timestampModel.getTimestamp(e),a=Date.now()-this._maxAgeSeconds*1e3;return t!==void 0?t<a:!0}else return!1}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}class ze{constructor(e={}){this.cachedResponseWillBeUsed=async({event:t,request:a,cacheName:n,cachedResponse:i})=>{if(!i)return null;const r=this._isResponseDateFresh(i),c=this._getCacheExpiration(n);$(c.expireEntries());const o=c.updateTimestamp(a.url);if(t)try{t.waitUntil(o)}catch{}return r?i:null},this.cacheDidUpdate=async({cacheName:t,request:a})=>{const n=this._getCacheExpiration(t);await n.updateTimestamp(a.url),await n.expireEntries()},this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&te(()=>this.deleteCacheAndMetadata())}_getCacheExpiration(e){if(e===x.getRuntimeName())throw new u("expire-custom-caches-only");let t=this._cacheExpirations.get(e);return t||(t=new Ge(e,this._config),this._cacheExpirations.set(e,t)),t}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);if(t===null)return!0;const a=Date.now();return t>=a-this._maxAgeSeconds*1e3}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),n=new Date(t).getTime();return isNaN(n)?null:n}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}let m=null,l=__SW_DEBUG__;const k={maxAge:__SW_CACHE_MAX_AGE__,maxEntries:__SW_CACHE_MAX_ENTRIES__};console.log("Service Worker: Starting initialization");const Qe=new URLSearchParams(self.location.search),H=Qe.get("path");H&&(m=decodeURIComponent(H),console.log("Service Worker: Initial path from URL:",m));self.skipWaiting();he();Se();Ue([{"revision":null,"url":"assets/index-CVimTsDs.js"},{"revision":null,"url":"assets/index-D8b4DHJx.css"},{"revision":"24afe18abdd2f4cb31e603a83a353efb","url":"index.html"},{"revision":"aa2f326aabefc80cdabe0a59f772a175","url":"manifest.webmanifest"}]);self.clients.matchAll().then(s=>{s.forEach(e=>{e.postMessage({type:"GET_SW_PARAMS"})})});console.log("Service Worker: Initialization complete");const Je=s=>{const e=s.headers.get("user-agent")||"",t=e.includes("iPhone")||e.includes("iPad")&&e.includes("WebView");return l&&console.log("Service Worker: Checking WebView - UserAgent:",e,"IsWebView:",t),t},Y=async({request:s,url:e})=>{if(l&&(console.log("Service Worker: Handling request for:",e.toString()),console.log("Service Worker: Request destination:",s.destination)),Je(s)){l&&console.log("Service Worker: Detected iOS WebView request");try{const r=m||e.pathname;l&&console.log("Service Worker: Attempting to fetch from local path:",`file://${r}`);const c=await fetch(`file://${r}`);if(c.ok)return l&&console.log("Service Worker: Successfully fetched from local path"),c}catch(r){l&&console.log("Service Worker: Failed to fetch from local path:",r)}}const t="js-css-cache";l&&console.log("Service Worker: Opening cache:",t);const a=await caches.open(t),n=await a.match(s);l&&console.log("Service Worker: Cache match result:",n?"Found":"Not found"),l&&console.log("Service Worker: Starting network request");const i=fetch(s).then(r=>{l&&console.log("Service Worker: Network request successful");const c=r.clone();return a.put(s,c),l&&console.log("Service Worker: Updated cache with new response"),r}).catch(r=>{if(l&&console.error("Service Worker: Network request failed:",r),!n)throw r;return l&&console.log("Service Worker: Falling back to cached response"),n});return n?(l&&console.log("Service Worker: Returning cached response immediately"),i.catch(()=>l&&console.log("Service Worker: Background cache update failed")),n):(l&&console.log("Service Worker: No cache found, waiting for network response"),i)};E(({request:s})=>s.destination==="script",Y);l&&console.log("Service Worker: Registered route for script files");E(({request:s})=>s.destination==="style",Y);l&&console.log("Service Worker: Registered route for style files");E(({request:s})=>s.destination==="image",new De({cacheName:"images-cache",plugins:[new Q({statuses:[0,200]}),new ze({maxEntries:k.maxEntries,maxAgeSeconds:k.maxAge})]}));l&&console.log("Service Worker: Registered route for image files");E(({request:s})=>s.mode==="navigate",new Le({cacheName:"pages-cache",plugins:[new Q({statuses:[0,200]})]}));l&&console.log("Service Worker: Registered route for navigation requests");self.addEventListener("message",s=>{if(l&&console.log("Service Worker: Received message:",s.data),s.data&&s.data.type==="SKIP_WAITING"&&(l&&console.log("Service Worker: Skipping waiting"),self.skipWaiting()),s.data&&s.data.type==="SET_WEBVIEW_PATH"&&(m=s.data.path,l&&console.log("Service Worker: Updated WebView path:",m)),s.data&&s.data.type==="SET_PARAMS"){const e=s.data.params;e.webviewPath&&(m=e.webviewPath),e.debug!==void 0&&(l=e.debug),e.cacheConfig&&(e.cacheConfig.maxAge&&(k.maxAge=e.cacheConfig.maxAge),e.cacheConfig.maxEntries&&(k.maxEntries=e.cacheConfig.maxEntries)),l&&console.log("Service Worker: Updated params:",{webviewPath:m,debug:l,cacheConfig:k})}});
