try{self["workbox:core:7.2.0"]&&_()}catch{}const O=(s,...e)=>{let t=s;return e.length>0&&(t+=` :: ${JSON.stringify(e)}`),t},L=O;class l extends Error{constructor(e,t){const a=L(e,t);super(a),this.name=e,this.details=t}}const I=new Set,d={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:typeof registration<"u"?registration.scope:""},C=s=>[d.prefix,s,d.suffix].filter(e=>e&&e.length>0).join("-"),D=s=>{for(const e of Object.keys(d))s(e)},x={updateDetails:s=>{D(e=>{typeof s[e]=="string"&&(d[e]=s[e])})},getGoogleAnalyticsName:s=>s||C(d.googleAnalytics),getPrecacheName:s=>s||C(d.precache),getPrefix:()=>d.prefix,getRuntimeName:s=>s||C(d.runtime),getSuffix:()=>d.suffix};function W(s,e){const t=new URL(s);for(const a of e)t.searchParams.delete(a);return t.href}async function z(s,e,t,a){const c=W(e.url,t);if(e.url===c)return s.match(e,a);const n=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await s.keys(e,n);for(const o of r){const i=W(o.url,t);if(c===i)return s.match(o,a)}}let w;function M(){if(w===void 0){const s=new Response("");if("body"in s)try{new Response(s.body),w=!0}catch{w=!1}w=!1}return w}class F{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}async function A(){for(const s of I)await s()}const H=s=>new URL(String(s),location.href).href.replace(new RegExp(`^${location.origin}`),"");function T(s){return new Promise(e=>setTimeout(e,s))}async function j(s,e){let t=null;if(s.url&&(t=new URL(s.url).origin),t!==self.location.origin)throw new l("cross-origin-copy-response",{origin:t});const a=s.clone(),n={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},r=M()?a.body:await a.blob();return new Response(r,n)}function q(){self.addEventListener("activate",()=>self.clients.claim())}try{self["workbox:precaching:7.2.0"]&&_()}catch{}try{self["workbox:strategies:7.2.0"]&&_()}catch{}function b(s){return typeof s=="string"?new Request(s):s}class K{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new F,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const a of this._plugins)this._pluginStateMap.set(a,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let a=b(e);if(a.mode==="navigate"&&t instanceof FetchEvent&&t.preloadResponse){const r=await t.preloadResponse;if(r)return r}const c=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const r of this.iterateCallbacks("requestWillFetch"))a=await r({request:a.clone(),event:t})}catch(r){if(r instanceof Error)throw new l("plugin-error-request-will-fetch",{thrownErrorMessage:r.message})}const n=a.clone();try{let r;r=await fetch(a,a.mode==="navigate"?void 0:this._strategy.fetchOptions);for(const o of this.iterateCallbacks("fetchDidSucceed"))r=await o({event:t,request:n,response:r});return r}catch(r){throw c&&await this.runCallbacks("fetchDidFail",{error:r,event:t,originalRequest:c.clone(),request:n.clone()}),r}}async fetchAndCachePut(e){const t=await this.fetch(e),a=t.clone();return this.waitUntil(this.cachePut(e,a)),t}async cacheMatch(e){const t=b(e);let a;const{cacheName:c,matchOptions:n}=this._strategy,r=await this.getCacheKey(t,"read"),o=Object.assign(Object.assign({},n),{cacheName:c});a=await caches.match(r,o);for(const i of this.iterateCallbacks("cachedResponseWillBeUsed"))a=await i({cacheName:c,matchOptions:n,cachedResponse:a,request:r,event:this.event})||void 0;return a}async cachePut(e,t){const a=b(e);await T(0);const c=await this.getCacheKey(a,"write");if(!t)throw new l("cache-put-with-no-response",{url:H(c.url)});const n=await this._ensureResponseSafeToCache(t);if(!n)return!1;const{cacheName:r,matchOptions:o}=this._strategy,i=await self.caches.open(r),f=this.hasCallback("cacheDidUpdate"),g=f?await z(i,c.clone(),["__WB_REVISION__"],o):null;try{await i.put(c,f?n.clone():n)}catch(h){if(h instanceof Error)throw h.name==="QuotaExceededError"&&await A(),h}for(const h of this.iterateCallbacks("cacheDidUpdate"))await h({cacheName:r,oldResponse:g,newResponse:n.clone(),request:c,event:this.event});return!0}async getCacheKey(e,t){const a=`${e.url} | ${t}`;if(!this._cacheKeys[a]){let c=e;for(const n of this.iterateCallbacks("cacheKeyWillBeUsed"))c=b(await n({mode:t,request:c,event:this.event,params:this.params}));this._cacheKeys[a]=c}return this._cacheKeys[a]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const a of this.iterateCallbacks(e))await a(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if(typeof t[e]=="function"){const a=this._pluginStateMap.get(t);yield n=>{const r=Object.assign(Object.assign({},n),{state:a});return t[e](r)}}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,a=!1;for(const c of this.iterateCallbacks("cacheWillUpdate"))if(t=await c({request:this.request,response:t,event:this.event})||void 0,a=!0,!t)break;return a||t&&t.status!==200&&(t=void 0),t}}class S{constructor(e={}){this.cacheName=x.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,a=typeof e.request=="string"?new Request(e.request):e.request,c="params"in e?e.params:void 0,n=new K(this,{event:t,request:a,params:c}),r=this._getResponse(n,a,t),o=this._awaitComplete(r,n,a,t);return[r,o]}async _getResponse(e,t,a){await e.runCallbacks("handlerWillStart",{event:a,request:t});let c;try{if(c=await this._handle(t,e),!c||c.type==="error")throw new l("no-response",{url:t.url})}catch(n){if(n instanceof Error){for(const r of e.iterateCallbacks("handlerDidError"))if(c=await r({error:n,event:a,request:t}),c)break}if(!c)throw n}for(const n of e.iterateCallbacks("handlerWillRespond"))c=await n({event:a,request:t,response:c});return c}async _awaitComplete(e,t,a,c){let n,r;try{n=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:c,request:a,response:n}),await t.doneWaiting()}catch(o){o instanceof Error&&(r=o)}if(await t.runCallbacks("handlerDidComplete",{event:c,request:a,response:n,error:r}),t.destroy(),r)throw r}}class p extends S{constructor(e={}){e.cacheName=x.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=e.fallbackToNetwork!==!1,this.plugins.push(p.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const a=await t.cacheMatch(e);return a||(t.event&&t.event.type==="install"?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let a;const c=t.params||{};if(this._fallbackToNetwork){const n=c.integrity,r=e.integrity,o=!r||r===n;a=await t.fetch(new Request(e,{integrity:e.mode!=="no-cors"?r||n:void 0})),n&&o&&e.mode!=="no-cors"&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,a.clone()))}else throw new l("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return a}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const a=await t.fetch(e);if(!await t.cachePut(e,a.clone()))throw new l("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[a,c]of this.plugins.entries())c!==p.copyRedirectedCacheableResponsesPlugin&&(c===p.defaultPrecacheCacheabilityPlugin&&(e=a),c.cacheWillUpdate&&t++);t===0?this.plugins.push(p.defaultPrecacheCacheabilityPlugin):t>1&&e!==null&&this.plugins.splice(e,1)}}p.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate({response:s}){return!s||s.status>=400?null:s}};p.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate({response:s}){return s.redirected?await j(s):s}};try{self["workbox:routing:7.2.0"]&&_()}catch{}const E="GET",R=s=>s&&typeof s=="object"?s:{handle:s};class y{constructor(e,t,a=E){this.handler=R(t),this.match=e,this.method=a}setCatchHandler(e){this.catchHandler=R(e)}}class B extends y{constructor(e,t,a){const c=({url:n})=>{const r=e.exec(n.href);if(r&&!(n.origin!==location.origin&&r.index!==0))return r.slice(1)};super(c,t,a)}}class G{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,a=this.handleRequest({request:t,event:e});a&&e.respondWith(a)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&e.data.type==="CACHE_URLS"){const{payload:t}=e.data,a=Promise.all(t.urlsToCache.map(c=>{typeof c=="string"&&(c=[c]);const n=new Request(...c);return this.handleRequest({request:n,event:e})}));e.waitUntil(a),e.ports&&e.ports[0]&&a.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const a=new URL(e.url,location.href);if(!a.protocol.startsWith("http"))return;const c=a.origin===location.origin,{params:n,route:r}=this.findMatchingRoute({event:t,request:e,sameOrigin:c,url:a});let o=r&&r.handler;const i=e.method;if(!o&&this._defaultHandlerMap.has(i)&&(o=this._defaultHandlerMap.get(i)),!o)return;let f;try{f=o.handle({url:a,request:e,event:t,params:n})}catch(h){f=Promise.reject(h)}const g=r&&r.catchHandler;return f instanceof Promise&&(this._catchHandler||g)&&(f=f.catch(async h=>{if(g)try{return await g.handle({url:a,request:e,event:t,params:n})}catch(P){P instanceof Error&&(h=P)}if(this._catchHandler)return this._catchHandler.handle({url:a,request:e,event:t});throw h})),f}findMatchingRoute({url:e,sameOrigin:t,request:a,event:c}){const n=this._routes.get(a.method)||[];for(const r of n){let o;const i=r.match({url:e,sameOrigin:t,request:a,event:c});if(i)return o=i,(Array.isArray(o)&&o.length===0||i.constructor===Object&&Object.keys(i).length===0||typeof i=="boolean")&&(o=void 0),{route:r,params:o}}return{}}setDefaultHandler(e,t=E){this._defaultHandlerMap.set(t,R(e))}setCatchHandler(e){this._catchHandler=R(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new l("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new l("unregister-route-route-not-registered")}}let m;const $=()=>(m||(m=new G,m.addFetchListener(),m.addCacheListener()),m);function k(s,e,t){let a;if(typeof s=="string"){const n=new URL(s,location.href),r=({url:o})=>o.href===n.href;a=new y(r,e,t)}else if(s instanceof RegExp)a=new B(s,e,t);else if(typeof s=="function")a=new y(s,e,t);else if(s instanceof y)a=s;else throw new l("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return $().registerRoute(a),a}const V="-precache-",J=async(s,e=V)=>{const a=(await self.caches.keys()).filter(c=>c.includes(e)&&c.includes(self.registration.scope)&&c!==s);return await Promise.all(a.map(c=>self.caches.delete(c))),a};function Q(){self.addEventListener("activate",s=>{const e=x.getPrecacheName();s.waitUntil(J(e).then(t=>{}))})}class X extends S{async _handle(e,t){let a=await t.cacheMatch(e),c;if(!a)try{a=await t.fetchAndCachePut(e)}catch(n){n instanceof Error&&(c=n)}if(!a)throw new l("no-response",{url:e.url,error:c});return a}}const Y={cacheWillUpdate:async({response:s})=>s.status===200||s.status===0?s:null};class Z extends S{constructor(e={}){super(e),this.plugins.some(t=>"cacheWillUpdate"in t)||this.plugins.unshift(Y)}async _handle(e,t){const a=t.fetchAndCachePut(e).catch(()=>{});t.waitUntil(a);let c=await t.cacheMatch(e),n;if(!c)try{c=await a}catch(r){r instanceof Error&&(n=r)}if(!c)throw new l("no-response",{url:e.url,error:n});return c}}try{self["workbox:cacheable-response:7.2.0"]&&_()}catch{}class ee{constructor(e={}){this._statuses=e.statuses,this._headers=e.headers}isResponseCacheable(e){let t=!0;return this._statuses&&(t=this._statuses.includes(e.status)),this._headers&&t&&(t=Object.keys(this._headers).some(a=>e.headers.get(a)===this._headers[a])),t}}class U{constructor(e){this.cacheWillUpdate=async({response:t})=>this._cacheableResponse.isResponseCacheable(t)?t:null,this._cacheableResponse=new ee(e)}}let u=null;const v=()=>{console.log("%c Service Worker: Updating routes with path:","background: #222; color: #bada55; font-size: 16px;",u),k(({request:s})=>s.destination==="script",N),k(({request:s})=>s.destination==="style",N),k(({request:s})=>s.destination==="image",new X({cacheName:"images-cache",plugins:[new U({statuses:[0,200]})]})),k(({request:s})=>s.mode==="navigate",new Z({cacheName:"pages-cache",plugins:[new U({statuses:[0,200]})]}))},te=()=>{const e=new URL(self.location.href).searchParams.get("path");return e?(u=decodeURIComponent(e),console.log("%c Service Worker: Got path from registration URL:","background: #222; color: #bada55; font-size: 16px;",u),!0):!1};console.log("%c Service Worker Starting ⚙️","background: #222; color: #bada55; font-size: 20px; padding: 10px;");self.skipWaiting();q();Q();te()&&v();self.clients.matchAll().then(s=>{console.log("%c Service Worker: Found clients:","background: #222; color: #bada55; font-size: 16px;",s.length),s.forEach(e=>{e.postMessage({type:"GET_SW_PARAMS"})})});console.log("%c Service Worker: Initialization complete ✅","background: #222; color: #bada55; font-size: 16px;");self.addEventListener("fetch",s=>{console.log("%c Service Worker: Intercepted request:","background: #222; color: #bada55; font-size: 16px;",{url:s.request.url,method:s.request.method,mode:s.request.mode,destination:s.request.destination,headers:Object.fromEntries(s.request.headers.entries())})});const N=async({request:s,url:e})=>{console.log("%c Service Worker: Handling request for:","background: #222; color: #bada55; font-size: 16px;",{url:e.toString(),method:s.method,mode:s.mode,destination:s.destination,webviewPath:u});const t="js-css-cache";console.log("%c Service Worker: Opening cache:","background: #222; color: #bada55; font-size: 16px;",t);const a=await caches.open(t),c=await a.match(s);console.log("%c Service Worker: Cache match result:","background: #222; color: #bada55; font-size: 16px;",c?"Found":"Not found"),console.log("%c Service Worker: Starting network request","background: #222; color: #bada55; font-size: 16px;"),u&&fetch(`${u}/${e.toString().replace("https://rodmastro32.github.io/test-cache/","")}`).then(o=>(console.log("%c Service Worker: fileFetch Network request successful","background: #222; color: #bada55; font-size: 16px;"),o)).catch(()=>console.log("%c fileFetch failed","background: #222; color: #ff4444; font-size: 16px;"));const n=fetch(s).then(r=>{console.log("%c Service Worker: Network request successful","background: #222; color: #bada55; font-size: 16px;");const o=r.clone();return a.put(s,o),console.log("%c Service Worker: Updated cache with new response","background: #222; color: #bada55; font-size: 16px;"),r}).catch(r=>{if(console.error("%c Service Worker: Network request failed:","background: #222; color: #ff4444; font-size: 16px;",r),!c)throw r;return console.log("%c Service Worker: Falling back to cached response","background: #222; color: #bada55; font-size: 16px;"),c});return c?(console.log("%c Service Worker: Returning cached response immediately","background: #222; color: #bada55; font-size: 16px;"),n.catch(()=>console.log("%c Service Worker: Background cache update failed","background: #222; color: #ff4444; font-size: 16px;")),c):(console.log("%c Service Worker: No cache found, waiting for network response","background: #222; color: #bada55; font-size: 16px;"),n)};self.addEventListener("message",s=>{console.log("%c Service Worker: Received message:","background: #222; color: #bada55; font-size: 16px;",s.data),s.data&&s.data.type==="SKIP_WAITING"&&(console.log("%c Service Worker: Skipping waiting","background: #222; color: #bada55; font-size: 16px;"),self.skipWaiting()),s.data&&s.data.type==="SET_WEBVIEW_PATH"&&(u=s.data.path,console.log("%c Service Worker: Updated WebView path:","background: #222; color: #bada55; font-size: 16px;",u),v())});self.addEventListener("install",()=>{const e=new URL(self.location.href).searchParams.get("path");e&&(u=decodeURIComponent(e),console.log("%c Service Worker: Initial path from URL:","background: #222; color: #bada55; font-size: 16px;",u),v())});
